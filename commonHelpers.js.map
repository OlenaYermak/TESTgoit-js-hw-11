{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["//    const KEY = \"42504906-5b025263817bd530cbe95d02a\";\n// const BASE_URL = \"https://pixabay.com/api/\";\n// const QUERY = searchQueryInput.value;\n\n// const LINK = `${BASE_URL}?key=${KEY}&q=${QUERY}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n// export const function getImages() {\n//  return fetch(LINK)\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error('Image error!')\n//             }\n\n//             return response.json()\n//         })\n//         .catch(error){\n//          console.error(\"Error fetching data:\", error);\n//   iziToast.error({\n//     title: \"Error\",\n//     message: \"An error occurred while fetching images. Please try again later.\",\n//         });\n// }\n\n\nconst apiKey = '42504906-5b025263817bd530cbe95d02a';\n\nexport const fetchImages = async (searchQuery) => {\n  const endpoint = `https://pixabay.com/api/?key=${apiKey}&q=${searchQuery}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n  try {\n    const response = await fetch(endpoint);\n    const data = await response.json();\n\n    if (data.hits.length === 0) {\n      throw new Error('No images found.');\n    }\n\n    return data.hits;\n  } catch (error) {\n    throw new Error('Error fetching images.');\n  }\n};\n","\n\n\n\n// function displayImages(images) {\n//   const galleryElement = document.getElementById('gallery');\n//   galleryElement.innerHTML = \"\"; // Очищаємо галерею перед відображенням нових зображень\n\n//   images.forEach(image => {\n//     const imageElement = document.createElement('img');\n//     imageElement.src = image.webformatURL;\n//     imageElement.alt = image.tags;\n//     galleryElement.appendChild(imageElement);\n//   });\n// }\n\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport const renderGallery = (images) => {\n  const galleryContainer = document.querySelector(\".image-container\");\n  galleryContainer.innerHTML = '';\n\n  images.forEach((image) => {\n    const imageCard = document.createElement('div');\n    imageCard.classList.add('image-card');\n\n    const imageUrl = image.webformatURL;\n    const imageAlt = image.tags;\n\n    imageCard.innerHTML = `\n      <a href=\"${image.largeImageURL}\" data-lightbox=\"gallery\" data-title=\"${imageAlt}\">\n        <img src=\"${imageUrl}\" alt=\"${imageAlt}\" loading=\"lazy\">\n      </a>\n    `;\n\n    galleryContainer.appendChild(imageCard);\n  });\n\n  // Refresh SimpleLightbox after adding new elements\n  const lightbox = new SimpleLightbox('.image-card a');\n  lightbox.refresh();\n};\n\nexport const showLoadingIndicator = () => {\n   \"Show loading indicator logic here\"\n};\n\nexport const hideLoadingIndicator = () => {\n  \"Hide loading indicator logic here\"\n};","// import iziToast from \"izitoast\";\n// import \"izitoast/dist/css/iziToast.min.css\";\n// import SimpleLightbox from \"simplelightbox\";\n// import \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\n\n// const imageSearchForm = document.querySelector(\".form-search\");\n\n//     const searchQueryInput = document.querySelector(\".form-input\");\n// const imageGallery = document.querySelector(\".image-container\");\n\n// import {getImages} from \"./js/pixabay-api\";\n\n\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { fetchImages } from './js/pixabay-api';\nimport { renderGallery, showLoadingIndicator, hideLoadingIndicator } from './js/render-functions';\n\nconst searchForm = document.querySelector(\".form-search\");\n\nsearchForm.addEventListener('submit', async (event) => {\n  event.preventDefault();\n\n  const searchInput = document.querySelector(\".form-input\");\n  const searchQuery = searchInput.value.trim();\n\n  if (!searchQuery) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please enter a search query.',\n    });\n    return;\n  }\n\n  showLoadingIndicator();\n\n  try {\n    const images = await fetchImages(searchQuery);\n    renderGallery(images);\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'No images found. Please try again.',\n    });\n  } finally {\n    hideLoadingIndicator();\n  }\n});"],"names":["apiKey","fetchImages","searchQuery","endpoint","data","renderGallery","images","galleryContainer","image","imageCard","imageUrl","imageAlt","SimpleLightbox","searchForm","event","iziToast"],"mappings":"wvBAwBA,MAAMA,EAAS,qCAEFC,EAAc,MAAOC,GAAgB,CAChD,MAAMC,EAAW,gCAAgCH,CAAM,MAAME,CAAW,2DAExE,GAAI,CAEF,MAAME,EAAO,MADI,MAAM,MAAMD,CAAQ,GACT,OAE5B,GAAIC,EAAK,KAAK,SAAW,EACvB,MAAM,IAAI,MAAM,kBAAkB,EAGpC,OAAOA,EAAK,IACb,MAAe,CACd,MAAM,IAAI,MAAM,wBAAwB,CACzC,CACH,ECrBaC,EAAiBC,GAAW,CACvC,MAAMC,EAAmB,SAAS,cAAc,kBAAkB,EAClEA,EAAiB,UAAY,GAE7BD,EAAO,QAASE,GAAU,CACxB,MAAMC,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,UAAU,IAAI,YAAY,EAEpC,MAAMC,EAAWF,EAAM,aACjBG,EAAWH,EAAM,KAEvBC,EAAU,UAAY;AAAA,iBACTD,EAAM,aAAa,yCAAyCG,CAAQ;AAAA,oBACjED,CAAQ,UAAUC,CAAQ;AAAA;AAAA,MAI1CJ,EAAiB,YAAYE,CAAS,CAC1C,CAAG,EAGgB,IAAIG,EAAe,eAAe,EAC1C,QAAO,CAClB,ECtBMC,EAAa,SAAS,cAAc,cAAc,EAExDA,EAAW,iBAAiB,SAAU,MAAOC,GAAU,CACrDA,EAAM,eAAc,EAGpB,MAAMZ,EADc,SAAS,cAAc,aAAa,EACxB,MAAM,KAAI,EAE1C,GAAI,CAACA,EAAa,CAChBa,EAAS,MAAM,CACb,MAAO,QACP,QAAS,8BACf,CAAK,EACD,MACD,CAID,GAAI,CACF,MAAMT,EAAS,MAAML,EAAYC,CAAW,EAC5CG,EAAcC,CAAM,CACrB,MAAe,CACdS,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACf,CAAK,CACL,QAAY,CAET,CACH,CAAC"}